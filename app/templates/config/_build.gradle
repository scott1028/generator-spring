buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.2.RELEASE")
    }
}

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'spring-boot'

sourceCompatibility = 1.8
targetCompatibility = 1.8

jar {
    baseName = 'app'
    version =  '0.0.1'
}

repositories {
    jcenter()
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web") { exclude module: "spring-boot-starter-tomcat" }
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.boot:spring-boot-starter-jetty")
    testCompile("org.springframework.boot:spring-boot-starter-test")

    compile("com.fasterxml.jackson.datatype:jackson-datatype-joda:2.4.5")
    compile("joda-time:joda-time:2.7")
    compile("org.jadira.usertype:usertype.core:3.2.0.GA")
    compile("org.hibernate:hibernate-validator:5.1.3.Final")
    compile("org.postgresql:postgresql:9.4-1201-jdbc41")
    compile("javax.inject:javax.inject:1")
    compile("javax.servlet:jstl:1.2")
    compile("com.h2database:h2:1.4.186")
    compile("org.apache.tomcat.embed:tomcat-embed-jasper")
    testCompile("com.jayway.jsonpath:json-path:2.0.0")
    testCompile("com.jayway.jsonpath:json-path-assert:2.0.0")
}

idea {
    module {
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/main/")
    }
}

test {
    testLogging {
        events "passed", "skipped", "failed"
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.0'
}
